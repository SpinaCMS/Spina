<nav class="w-full md:max-w-xs bg-spina-dark md:bg-gradient-to-b from-spina-dark to-spina-light md:relative md:overflow-hidden" data-controller="navigation">
  <div class="flex flex-row md:flex-col justify-between h-full w-full bg-black p-1 md:p-3 bg-opacity-0 duration-300 ease-in-out transition-colors md:bg-opacity-50" data-navigation-target="primary">

    <ul class="flex md:flex-col">
      <%= render Spina::MainNavigation::SubNavComponent.new(:content) do |nav| %>
        <% nav.icon do %>
          <%= heroicon('document-text', style: :solid, class: 'hidden md:block w-8 h-8 text-white md:mr-3') %>
          <%= heroicon('menu', style: :solid, class: 'md:hidden w-8 h-8 text-white md:mr-3') %>
          
          <div class="text-white font-semibold hidden md:block transform -translate-x-2 ease-in-out duration-300 absolute md:relative opacity-0 transition-all" data-navigation-target="label">
            <%= t('spina.website.content') %>
          </div>
        <% end %>

        <% nav.links do %>
        
          <%= render Spina::MainNavigation::LinkComponent.new t('spina.website.pages'), spina.admin_pages_path, active: controller_name.in?(%w(pages resources)) %>
          
          <%= render Spina::MainNavigation::LinkComponent.new t('spina.navigations.navigations'), spina.admin_navigations_path, active: controller_name == "navigations" %>

          <%= render Spina::MainNavigation::LinkComponent.new t('spina.layout.layout'), spina.edit_admin_layout_path, active: controller_name == "layout" %>
          
          <%= render Spina::MainNavigation::LinkComponent.new t('spina.website.media_library'), spina.admin_images_path, active: controller_name.in?(%w(images media_folders attachments)) %>
          
          <%= render Spina::Hooks::HookComponent.new(partial: "website_secondary_navigation") %>
        <% end %>
      <% end %>
      
      <%= render Spina::Hooks::HookComponent.new(partial: "primary_navigation") %>

      <%= render Spina::MainNavigation::SubNavComponent.new(:settings) do |nav| %>
        <% nav.icon do %>
          <%= heroicon('cog', style: :solid, class: 'w-8 h-8 text-white md:mr-3') %>
          
          <div class="text-white font-semibold hidden md:block transform -translate-x-2 ease-in-out duration-300 absolute md:relative opacity-0 transition-all" data-navigation-target="label">
            <%= t('spina.website.settings') %>
          </div>
        <% end %>

        <% nav.links do %>
          <%= render Spina::MainNavigation::LinkComponent.new(t('spina.settings.general'), spina.edit_admin_account_path, active: controller_name == "accounts") %>
          <%= render Spina::MainNavigation::LinkComponent.new(t('spina.website.theme'), spina.edit_admin_theme_path, active: controller_name == "theme") %>

          <% if Spina.config.authentication == "Spina::Authentication::Sessions" %>
            <%= render Spina::MainNavigation::LinkComponent.new(t('spina.settings.users'), spina.admin_users_path, active: controller_name == "users") %>
          <% end %>
          
          <%= render Spina::Hooks::HookComponent.new(partial: "settings_secondary_navigation") %>
          
          <% Spina::Plugin.all.each do |plugin| %>
            <% if plugin.settings.present? %>
              <%= render Spina::MainNavigation::LinkComponent.new(t("spina.#{plugin.namespace}.title"), spina.admin_edit_settings_path(plugin.namespace), active: controller_name == 'settings' && params[:plugin] == plugin.namespace) %>
            <% end %>
          <% end %>
          
        <% end %>
      <% end %>
    </ul>

    <% if defined?(logout_path) %>
      <ul class="md:block">
        <li>
          <%= link_to logout_path, class: 'p-3 w-14 block flex justify-center opacity-50 hover:opacity-100 transition duration-200 ease', data: {turbo: false} do %>
            <%= heroicon('logout', style: :solid, class: 'h-8 w-8 text-white') %>
          <% end %>
        </li>
      </ul>
    <% end %>

  </div>
</nav>
