%nav#primary.transformed{data: {turbolinks_permanent: true}}
  %ul
    %li{class: ('active' if (%w[pages photos attachments navigations resources] + Spina::Plugin.all.map { |plugin| plugin.namespace if current_theme.plugins.include?(plugin.name) }).include? controller_name)}
      = link_to spina.admin_pages_path do
        = icon('home')
        = t('spina.website.title')
        = icon('caret-right')

      %ul
        %li{class: ('active' if (current_admin_path.start_with?('/pages') || current_admin_path.start_with?('/navigations')) && @page&.resource.blank?)}
          = link_to t('spina.website.pages'), spina.admin_pages_path
        %li{class: ('active' if current_admin_path.start_with?('/images', '/attachments'))}
          = link_to t('spina.website.media_library'), spina.admin_images_path

        - Spina::Plugin.all.each do |plugin|
          - if current_theme.plugins.include? plugin.name
            - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_website_secondary_navigation"
              = render "spina/admin/hooks/#{ plugin.namespace }/website_secondary_navigation", plugin: plugin

        - Spina::Resource.order(:label).each do |resource|
          %li{class: ('active' if (@resource || @page&.resource) == resource)}= link_to resource.label, spina.admin_resource_path(resource)

        %li
          = link_to '#', class: 'back-to-main-menu' do
            = icon('caret-left')
            =t 'spina.main_menu'

    - Spina::Plugin.all.each do |plugin|
      - if current_theme.plugins.include? plugin.name
        - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_primary_navigation"
          = render "spina/admin/hooks/#{ plugin.namespace }/primary_navigation", plugin: plugin

    %li{class: ('active' if %w[accounts users tenants].include? controller_name)}
      = link_to spina.edit_admin_account_path do
        = icon('cog')
        = t('spina.preferences.title')
        = icon('caret-right')

      %ul
        %li{class: ('active' if params[:action] == 'edit' && params[:controller] == 'spina/admin/accounts')}
          = link_to t('spina.preferences.account'), spina.edit_admin_account_path
        %li{class: ('active' if params[:action] == 'style')}
          = link_to t('spina.preferences.style'), spina.style_admin_account_path
        - if current_spina_user.admin?
          %li{class: ('active' if %w[users].include? controller_name)}
            = link_to t('spina.preferences.users'), spina.admin_users_path
        %li{class: ('active' if params[:action] == 'social')}
          = link_to t('spina.preferences.social_media'), spina.social_admin_account_path
        %li{class: ('active' if params[:action] == 'analytics')}
          = link_to t('spina.preferences.analytics'), spina.analytics_admin_account_path

        - Spina::Plugin.all.each do |plugin|
          - if current_theme.plugins.include? plugin.name
            - if lookup_context.exists? "spina/admin/hooks/#{ plugin.namespace }/_settings_secondary_navigation"
              = render "spina/admin/hooks/#{ plugin.namespace }/settings_secondary_navigation", plugin: plugin
          - if plugin.settings.present?
            %li{class: ('active' if controller_name == 'settings' and params[:plugin] == plugin.namespace)}
              = link_to t("spina.#{plugin.namespace}.title"), spina.admin_edit_settings_path(plugin.namespace)

        %li
          = link_to '#', class: 'back-to-main-menu' do
            = icon('caret-left')
            =t 'spina.main_menu'

    %li.bottom
      = link_to spina.admin_logout_path, data: {turbolinks: false} do
        = icon('power-off')
        =t 'spina.logout'
